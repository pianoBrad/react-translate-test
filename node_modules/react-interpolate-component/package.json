{
  "name": "react-interpolate-component",
  "version": "0.3.0",
  "description": "A component for React that renders elements into a format string containing replacement fields",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/martinandert/react-interpolate-component.git"
  },
  "keywords": [
    "react",
    "react-component",
    "interpolations",
    "interpolate",
    "substitution",
    "substitute",
    "sprintf",
    "named-arguments",
    "format"
  ],
  "author": {
    "name": "Martin Andert",
    "email": "mandert@gmail.com"
  },
  "license": "MIT",
  "scripts": {
    "test": "make test"
  },
  "bugs": {
    "url": "https://github.com/martinandert/react-interpolate-component/issues"
  },
  "homepage": "https://github.com/martinandert/react-interpolate-component",
  "dependencies": {
    "extend": "~1.2.1"
  },
  "peerDependencies": {
    "react": "~0.9.0"
  },
  "devDependencies": {
    "semver": "~2.2.1",
    "node-dev": "~2.1.6",
    "jsxhint": "^0.4.3",
    "mocha": "~1.17.1",
    "connect-browserify": "~1.0.0",
    "express": "~3.4.8",
    "node-jsx": "~0.2.1",
    "reactify": "~0.7.0",
    "react": "~0.9.0"
  },
  "readme": "# React Interpolate Component\n\nA component for [React][1] that renders elements into a format string containing replacement fields. It comes in handy when working with dynamic text elements like localized strings of a translation library.\n\n\n## Installation\n\nInstall via npm:\n\n```bash\n% npm install react-interpolate-component\n```\n\n\n## Usage\n\nThe Interpolate component expects as only child a format string containing the placeholders to be interpolated. Like the format syntax of `sprintf` with named arguments, a placeholder is depicted as `'%(' + placeholder_name + ')s'`.\n\nThe actual substitution elements are provided as props. These can be strings, numbers, dates, and even React components.\n\nHere is a small exemplification:\n\n```js\nvar React       = require('react');\nvar Interpolate = require('react-interpolate-component');\n\nvar MyApp = React.createClass({\n  render: function() {\n    var props = { \n      firstName: React.DOM.strong(null, 'Paul'), \n      age: 13, \n      unit: 'years',\n      component: React.DOM.p,  // default is a <span>\n      className: 'foo'\n    };\n\n    var format = '%(firstName)s is %(age)s %(unit)s old.';\n\n    return React.DOM.div(null, Interpolate(props, format));\n  }\n});\n```\n\nThe MyApp component shown above renders the following (simplified) HTML:\n\n```html\n<div>\n  <p class=\"foo\">\n    <strong>Paul</strong> is 13 years old.\n  </p>\n</div>\n```\n\nAll props that are not interpolation arguments get transferred to Interpolate's container component (which is a `<span>` by default).\n\nAlternatively to providing the format string as child, you can also set the `format` prop to the desired format:\n\n```html\n<Interpolate name=\"Martin\" format=\"Hello, %(name)s!\" />\n```\n\nFor security reasons, all HTML markup present in the format string will be escaped. You can undermine this by providing a prop named \"unsafe\" which is set to `true`. There's one caveat when allowing unsafe format strings: You cannot use other React components as interpolation values.\n\n\n## Example\n\nThe examples code is located at `example` directory. You can clone this repository and run `make install example` and point your web browser to\n`http://localhost:3000`.\n\n\n## Contributing\n\nHere's a quick guide:\n\n1. Fork the repo and `make install`.\n\n2. Run the tests. We only take pull requests with passing tests, and it's great to know that you have a clean slate: `make test`.\n\n3. Add a test for your change. Only refactoring and documentation changes require no new tests. If you are adding functionality or are fixing a bug, we need a test!\n\n4. Make the test pass.\n\n5. Push to your fork and submit a pull request.\n\n\n## Licence\n\nReleased under The MIT License.\n\n\n\n[1]: http://facebook.github.io/react/\n",
  "readmeFilename": "README.md",
  "_id": "react-interpolate-component@0.3.0",
  "dist": {
    "shasum": "f554d6bcdb6d863414977f535ecc9a52ab203220"
  },
  "_from": "react-interpolate-component@~0.3.0",
  "_resolved": "https://registry.npmjs.org/react-interpolate-component/-/react-interpolate-component-0.3.0.tgz"
}
